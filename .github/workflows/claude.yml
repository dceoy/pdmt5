---
name: Claude Code
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"
jobs:
  claude:
    if: >
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
      || (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude'))
      || (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude'))
      || (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read  # Required for Claude to read CI results on PRs
    uses: dceoy/gh-actions-for-devops/.github/workflows/claude-code-action.yml@main
    with:
      # This is an optional setting that allows Claude to read CI results on PRs
      additional-permissions: |
        actions: read

      # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
      # model: "claude-opus-4-20250514"

      # Optional: Customize the trigger phrase (default: @claude)
      # trigger-phrase: "/claude"

      # Optional: Trigger when specific user is assigned to an issue
      # assignee-trigger: "claude-bot"

      # Optional: Allow Claude to run specific commands
      # allowed-tools: "Bash(npm install),Bash(npm run build),Bash(npm run test:*),Bash(npm run lint:*)"

      # Optional: Add custom instructions for Claude to customize its behavior for your project
      # custom-instructions: |
      #   Follow our coding standards
      #   Ensure all new code has tests
      #   Use TypeScript for new files

      # Optional: Custom environment variables for Claude
      # claude-env: |
      #   NODE_ENV: test
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  claude-review:
    # Optional: Filter by PR author
    # if: >
    #   github.event.pull_request.user.login == 'external-contributor'
    #   || github.event.pull_request.user.login == 'new-developer'
    #   || github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'
    if: >
      github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    uses: dceoy/gh-actions-for-devops/.github/workflows/claude-code-action.yml@main
    with:
      # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
      # model: "claude-opus-4-20250514"

      # Direct prompt for automated review (no @claude mention needed)
      direct-prompt: |
        Please review this pull request and provide feedback on:
        - Code quality and best practices
        - Potential bugs or issues
        - Performance considerations
        - Security concerns
        - Test coverage

        Be constructive and helpful in your feedback.

      # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
      # use-sticky-comment: true

      # Optional: Customize review based on file types
      # direct-prompt: |
      #   Review this PR focusing on:
      #   - For TypeScript files: Type safety and proper interface usage
      #   - For API endpoints: Security, input validation, and error handling
      #   - For React components: Performance, accessibility, and best practices
      #   - For tests: Coverage, edge cases, and test quality

      # Optional: Different prompts for different authors
      # direct-prompt: |
      #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' &&
      #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
      #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}

      # Optional: Add specific tools for running tests or linting
      # allowed-tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"

      # Optional: Skip review for certain conditions
      # if: |
      #   !contains(github.event.pull_request.title, '[skip-review]') &&
      #   !contains(github.event.pull_request.title, '[WIP]')
    secrets:
      CLAUDE_CODE_OAUTH_TOKEN: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
